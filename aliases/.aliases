# For stow to load from secondary storage
alias stowdot='stow -d /mnt/storage/Code/Personal/dotfiles -t $HOME'

# Zoxide
alias cd='z'

# Eza
alias l="eza --icons --group-directories-first"
alias ls="eza --icons --group-directories-first"
alias ll="eza -lg --icons --group-directories-first"
alias la="eza -lag --icons"
alias lt="eza -lTg --icons"
alias lh="eza -lTag --level=1 --icons --group-directories-first"
alias lt1="eza -lTg --level=1 --icons --group-directories-first"
alias lt2="eza -lTg --level=2 --icons --group-directories-first"
alias lt3="eza -lTg --level=3 --icons --group-directories-first"
alias lta="eza -lTag --icons --group-directories-first"
alias lta1="eza -lTag --level=1 --icons --group-directories-first"
alias lta2="eza -lTag --level=2 --icons --group-directories-first"
alias lta3="eza -lTag --level=3 --icons --group-directories-first"

# bat
alias bat='batcat'

# yt-dlp
noglob dvid() {
  yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]' -o '%(title)s.%(ext)s' "$@"
}
noglob dwav() {
  yt-dlp -x --audio-format wav "$@"
}

# Lazydocker
alias lzd='lazydocker'

# Update all UV packages
# Add to ~/.zshrc
uv_update_all() {
  local base="${1:-/mnt/storage/Code}"   # optional arg - defaults to /mnt/storage/Code
  local -i total=0 success=0 fail=0
  local -a files

  printf "üîé Searching for uv projects in: %s\n" "$base"

  # Gather matching files (handles spaces/newlines safely)
  IFS=$'\n' files=($(find "$base" -type f \( -name 'uv.lock' -o -name 'pyproject.toml' \) 2>/dev/null))

  if (( ${#files[@]} == 0 )); then
    printf "‚ö†Ô∏è  No uv projects found under %s\n" "$base"
    return 0
  fi

  for f in "${files[@]}"; do
    ((total++))
    dir=${f%/*}
    printf "\n[%d/%d] üì¶ Updating: %s\n" "$total" "${#files[@]}" "$dir"

    # run in a subshell so we don't change caller's cwd
    if (cd "$dir" && uv lock --upgrade && uv sync); then
      printf "  ‚úî Updated %s\n" "$dir"
      ((success++))
    else
      printf "  ‚úñ Skipped/failed: %s\n" "$dir"
      ((fail++))
    fi
  done

  printf "\nüßπ Pruning uv cache...\n"
  if uv cache prune; then
    printf "  ‚úî Cache pruned\n"
  else
    printf "  ‚ö†Ô∏è  uv cache prune failed (non-fatal)\n"
  fi

  printf "\n‚úÖ Done ‚Äî total: %d, succeeded: %d, failed: %d\n" "$total" "$success" "$fail"
}

# Usage:
# uv_update_all            # default: /mnt/storage/Code
# uv_update_all /path/to/dir  # specify another base directory